# Создайте модуль с функцией внутри.
# Функция получает на вход загадку, список с возможными верными вариантами отгадок и количество попыток на угадывание.
# Функция возвращает номер попытки, с которой была отгадана загадка или ноль, если попытки исчерпаны.

# Добавьте в модуль с загадками функцию, которая хранит словарь списков.
# Ключ словаря - загадка, значение - список с отгадками.
# Функция в цикле вызывает загадывающую функцию, из предыдущей задачи, чтобы передать ей все свои загадки.

# Добавьте в модуль с загадками функцию, которая принимает на вход строку (текст загадки) и число (номер попытки, с которой она угадана).
# Функция формирует словарь с информацией о результатах отгадывания.
# Для хранения используйте защищённый словарь уровня модуля.
# Отдельно напишите функцию, которая выводит результаты угадывания из защищённого словаря в удобном для чтения виде.
# Для формирования результатов используйте генераторное выражение.

__all__ = ["mystery_dict", "show_mystery_guess_dict"]

def _check_mystery(mystery="Сорок одежек и все без застежек", answers=["капуста", "капустка"], attempts=2):
    count = 0
    while count < attempts:
        count += 1
        user_unswer = input(f"Отгадайте загадку {mystery}: ").lower()
        if user_unswer in answers:
            return count
        else:
            print(f"Не верно осталось {attempts - count} попыток")
    return 0


def mystery_dict():
    dict_ = {
        "Сорок одежек и все без застежек": ["капуста", "капустка"],
        "Зимой и летом одним цветом": ["ёлка", "елка"],
        "Ни лает, ни кусает, в дом не пускает": ["замок", "вахтер"],
    }
    for key, value in dict_.items():
        mystery_guess(key, _check_mystery(key, value))


def mystery_guess(mystery, attempts):
    _mystery_guess_dict[mystery] = attempts


_mystery_guess_dict = {}


def show_mystery_guess_dict():
    return (f"Загадка {key} угаданна с {value} попытки" if value != 0
            else f"Загадка {key} не разгаданна"
            for key, value in _mystery_guess_dict.items())


if __name__ == '__main__':
    mystery_dict()
    print(_mystery_guess_dict)
    print(*show_mystery_guess_dict(), sep="\n")
